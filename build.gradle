

import java.text.SimpleDateFormat;

def buildTime() {
    def df = new SimpleDateFormat("yyyyMMdd-HHmm") // you can change it
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

plugins {
  id "org.xtext.xtend" version "2.0.8"
  id 'jacoco'
  id "de.undercouch.download" version "4.0.4"
  id 'maven-publish'
  //id 'de.jansauer.printcoverage' version '2.0.0'
  //id 'antlr'
}

version = '0.1.0-SNAPSHOT'

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            groupId 'com.crossecore'
            artifactId 'com.crossecore.generator'
            
            pom {
                name = 'CrossEcore Generator'
                description = 'A concise description of my library'
                url = 'http://www.crossecore.com'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'schwichti'
                        name = 'Simon Schwichtenberg'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:crossecore/crossecore-generator.git'
                    developerConnection = 'scm:git:git@github.com:crossecore/crossecore-generator.git'
                    url = 'https://github.com/crossecore/crossecore-generator'
                }
            }
        }
    }
    repositories {
        mavenLocal()
        /*
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/content/repositories/releases/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.hasProperty('sonatypeUser') ? project.getProperty('sonatypeUser'):''
                password project.hasProperty('sonatypePassword') ? project.getProperty('sonatypePassword'):''
                //password project.hasProperty('password') ? project.getProperty('password'):''
                
            }
        }
        */
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'


sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    test{
        java{
            srcDir 'test'
        }
        //antlr.srcDirs = ['test/antlr']
    }
     
}



compileJava.options.encoding = "UTF-8"

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.crossecore.CrossEcore'
    }
    baseName = "crossecore-generator_${buildTime()}"
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } 
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    with jar
}

repositories.jcenter()

task downloadFiles(type: Download) {
    src([
        'https://raw.githubusercontent.com/antlr/grammars-v4/master/typescript/TypeScriptLexer.g4',
        'https://raw.githubusercontent.com/antlr/grammars-v4/master/typescript/TypeScriptParser.g4'
    ])
    dest new File("./test/antlr")
    overwrite true
}


dependencies {

	compile group: 'org.eclipse.platform', name: 'org.eclipse.core.runtime', version: '3.13.0'
	    
	compile group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.xbase.lib', version: '2.13.0'
    compile group: 'org.eclipse.xtext', name: 'org.eclipse.xtext', version: '2.13.0'
    compile group: 'org.eclipse.xtend', name: 'org.eclipse.xtend.lib.macro', version: '2.13.0'
    
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore', version: '2.12.0'
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore.xmi', version: '2.12.0'
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.common', version: '2.12.0'
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.edit', version: '2.12.0'
    
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    
    //https://hudson.eclipse.org/ocl/view/OCL/job/ocl-oxygen-master/lastBuild/artifact/MDT-OCL.p2.repository/plugins/
  
    compile files('lib/org.eclipse.ocl_3.6.200.v20170522-1736.jar')
    compile files('lib/org.eclipse.ocl.common_1.4.200.v20160613-1518.jar')
    compile files('lib/org.eclipse.ocl.ecore_3.6.200.v20170522-1736.jar')
    compile files('lib/org.eclipse.ocl.pivot_1.3.0.v20170522-1753.jar')
    compile files('lib/org.eclipse.ocl.xtext.base_1.3.0.v20170522-1753.jar')
    compile files('lib/org.eclipse.ocl.xtext.completeocl_1.3.0.v20170522-1753.jar')
    compile files('lib/org.eclipse.ocl.xtext.essentialocl_1.3.0.v20170522-1753.jar')
    compile files('lib/org.eclipse.ocl.xtext.oclinecore_1.3.0.v20170522-1753.jar')
    compile files('lib/org.eclipse.ocl.xtext.oclstdlib_1.3.0.v20170522-1753.jar')
    
    compile group: 'lpg.runtime', name: 'java', version: '2.0.17-v201004271640'

	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    
    testImplementation 'junit:junit:4.12'
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.8'
    
}
